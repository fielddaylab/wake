# basePath job.kelp-shop-welcome

:: stopLeaveStation
@trigger InteractObject
@when objectId == "ExitStation"
@cutscene
$if JobTaskCompleted(getVisualModel), JobTaskCompleted(getTagger)
    //have both, do nothing
$elseif JobTaskCompleted(getVisualModel)
    // have 1 upgrade, show text and cancel interact
    {@guide} Seems like we're still missing the {nameof ROVTagger}, let's pick that up before heading out.
    $call CancelInteract()
$elseif JobTaskCompleted(getTagger)
    // have 1 upgrade, show text and cancel interact
    {@guide} Seems like we're still missing the {nameof VisualModel}, let's pick that up before heading out.
    $call CancelInteract()
$else
    // have neither, show text and cancel interact
    {@guide} Seems like we're still missing some upgrades, let's grab those before heading out.
    $call CancelInteract()
$endif

:: helpGoShop
@trigger    RequestPartnerHelp
@when 		scene:name != "Shop", JobTaskTop(gotoShop)
@cutscene
{@player} 	Where should we be going again?
{@guide}    Before we head out, we might wanna upgrade our ship with some of our earnings.
            I hear there's a mechanic right off the dock that can upgrade our ship. Let's check them out!

:: helpAtShopAfterPurchase
@trigger    RequestPartnerHelp
@when 		scene:name == "Shop", HasUpgrade(ROVTagger), HasUpgrade(VisualModel)
@boostScore 1
@cutscene
{@player} 	Anything else we need here?
{@guide}    Nope, we've got everything we need!
            Why don't we head back to the ship?

:: helpAtShop
@trigger    RequestPartnerHelp
@when 		scene:name == "Shop"
@cutscene
{@player} 	What are we doing here?
{@guide}    We're looking to upgrade our ship with some of our earnings.
            Why don't you check out some of the instruments {nameof @kelpMechanic} has for sale.

:: gotBothModels
@trigger    JobTaskCompleted
@when       JobTaskCompleted(getVisualModel), JobTaskCompleted(getTagger)
@cutscene
{@player}   Okay, got both of them!
{@guide}    Nice! Let's head back to the Ship then.

// CATCH-ALL GUIDE TEXT

:: helpGetTagger
@trigger    RequestPartnerHelp
@when       JobTaskTop(getTagger)
@cutscene
{@player}   So... where do we head now?
{@guide}    Talk to your uncle. He'll have some items for you!

:: helpGetVisualModel
@trigger    RequestPartnerHelp
@when       JobTaskTop(getVisualModel)
@cutscene
{@player}   So... where do we head now?
{@guide}    Talk to your uncle. He'll have some items for you! 

:: helpReturnShip
@trigger    RequestPartnerHelp
@when       JobTaskTop(returnShip)
@cutscene
{@player}   So... where do we head now?
{@guide}    We need to return to the Helm on the ship.

// END
:: end
@trigger    SceneStart
@when       scene:name == "Helm"
@triggerPriority    High
@cutscene
$if JobTaskCompleted(getVisualModel), JobTaskCompleted(getTagger)
    {@player}  I can't believe Mom's letting me leave the Forested Lagoon... by myself!!
                What are the odds?? 
     {@guide}   Processing... processing...
                Your odds of surviving a journey to another research station are 97.2%!
     {@player}  Um.| Okay, cool.| That was a rhetorical question, but I like the optimism. 
     {@player}  So, what now, {nameof @guide}?
     {@guide}   Your map has nearly finished updating! Any second now... 


    $branch common.download
    $call UnlockStation(CoralStation)
    $call UnlockStation(ArcticStation)
    $call UnlockStation(BayouStation)

    $call UnlockRoom(WorldMap)
    $call MapPanel->Activate()
    $call MapHolo->Activate()
    $call ShowPopup(map.unlock.shipFeature.header, map.unlock.worldMap.desc)
    $call ShowPopup(map.unlock.stations.header, map.unlock.stations.desc)

    {@guide} Your map is ready!

    {fade-out black.60, 0.5, wait}
    {@}
    {style center}{@tutorial}{speaker World Map}
    $call FocusHighlight->Focus(WorldMap.Highlight)
        Use the map to view available jobs and travel to different ecosystems. 
    $call FocusHighlight->Clear()
    {hide-dialog}{fade-in 0.5, wait}

    $call CompleteJob()
    $set    jobs:common-dive.seen.tagger-intro = false
    $set    jobs:common-dive.seen.probe-intro = false
    $set    jobs:common-dive.seen.micro-intro = false
$endif

:: ReallyTheEnd
@function   JobStarted
$set    world:shop.unlocked = true

:: UnlockModeling
@trigger    JobTasksUpdated
@when   JobTaskCompleted(getVisualModel)
@triggerPriority High
$call UnlockRoom("ModelingFoyer")
$call UnlockRoom("Modeling")