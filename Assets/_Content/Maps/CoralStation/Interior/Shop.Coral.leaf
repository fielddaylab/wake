# basePath interior.shop.coral

#include "Headers/Common.leaf"

#const MerchantId = coralMechanic
#const UnlockHintNodeId = .unlockHintSomewhere
#const UnlockHintHereNodeId = .unlockHintHere
#const LowExpNodeId = .lowExp
#const FreeItemPromptId = .freeItem
#const CostItemPromptId = .costItem
#const CancelNodeId = .cancel
#const NotEnoughCashNodeId = .notEnoughCash
#const PurchaseNodeId = .purchased

#include "Headers/CommonShop.leaf"

// Intros

// first time player talks to mechanic
#ShopHandler(first)
@boostScore 100
@once
{@coralMechanic}  O, you're back! Glad all the Lionfish drama didn't scare you off.
                  I'm fun to hang out with when I'm not on a vendetta against venomous monsters.
{@player}         Yeah... I don't get it.
                  You're allergic to Lionfish, but you still work around them.
                  Isn't that... you know... terrifying? 
{@coralMechanic}  Ha. I like to live dangerously.
                  I feel like you might know something about that.
{@player}         Me?? 
{@coralMechanic}  I heard that you and your friend crashed a sub a few months ago.
                  Don't worry. Anything like that happens again, just pay me a visit. I can fix anything.
                 Wanna take a look around my shop? 
$choice .action.openShop; Sure! 
$choice .action.cancel; Not right now.

// second time player arrives in the station and has talked to mechanic previously
#ShopHandler(secondTimeAtStation, world:coral.leftStation == true)
@boostScore 50
@once
{@coralMechanic}    Hey, O! Welcome back.  
                   You convince the Professor to get rid of those Lionfish yet?
{@player}           Well... not yet.
                   They are a little creepy, but I don't know much about them. 
{@coralMechanic}    Come on, O. You're my last hope! 
                   You've seen how {nameof @profCoral} works... slow and steady. Emphasis on the <i>slow</i>.
                   If we don't take care of the Lionfish problem soon, it'll be too late.
{@player}           I——I'll do my best. 
{@coralMechanic}    I knew I could count on you. 
                   In the meantime... I guess you'd like to take a look around my shop? 
$choice .action.openShop; Sure!
$choice .action.cancel; Not right now.


// Default case:
#ShopHandler(a)
{@$MerchantId}  Hey, O! Nice to see you again.
                Wanna look around the shop?  
$choice .action.openShop; Sure!
$choice .action.cancel; Not right now.

// After Hunting Lions job completed
#ShopHandler(gotLionfish, JobCompleted(coral-hunting-lions))
@once
{@$MerchantId} O!! You did it! You're my hero!!
{@player} Um... what... ?
{@$MerchantId} The Lionfish. You figured it out!
               I <i>knew</i> those things were bad news. 
                Guess I better put back that ignition coil I borrowed from {nameof @profCoral}'s engine...
{@player} Wait. That was you??
{@$MerchantId}  Shhh. It was for a good cause. 
                Anyway. Wanna look around the shop?  
$choice .action.openShop; Sure!
$choice .action.cancel; Not right now.

#ShopHandler(postFinalJob, JobCompleted(final-final))
@once
{@$MerchantId} O! I am absolutely FREAKING out.
{@$MerchantId} Is it true that you went to the Lower Depths and rescued the crew of the Nautilus?
{@$MerchantId} Alone?? 
{@player} Um... yeah, I guess so. 
{@player} My friend Sam sent me all the data, it wasn't a big deal—
{@$MerchantId} Not a big deal?? O, you're basically famous! 
{@$MerchantId} Next time you go on some crazy life-or-death mission, rope me in, okay? I'm your girl.
{@player} Totally.

// 50% chance to occur after completing at least one job at coral station
#ShopHandler(noGoLionfish, Chance(0.5), !JobCompleted(coral-hunting-lions), CompletedJobCount(CoralStation, 1))
@once
{@$MerchantId} Hey, O! It's always nice to see you.  
               So... did you and the professor figure out what's going on with those Lionfish yet? 
{@player}      Not yet. Sorry, {nameof @$MerchantId}.
               Sounds like he's got a lot of other stuff going on. 
{@$MerchantId} Ugh. I swear, Professor Slow-and-Steady is never going to listen.
               I might need to take matters into my own hands... 
{@$MerchantId} Ahem. Anyhow... wanna take a look around my shop, O?  
$choice .action.openShop; Sure!
$choice .action.cancel; Not right now.

#ShopHandler(gotFlashlightAssignedHere, world:shop.boughtFlashlightFrom == "coral", HasUpgrade("Flashlight"))
@once
{@$MerchantId}  O! Thank you for retrieving that {nameof Flashlight} for me!
{@$MerchantId}  It's beautiful down there, isn't it? 
{@player}       Yeah. Though you could've warned me about all those Anglerfish...
{@$MerchantId}  Ha. Warned you? Where's the fun in that?
                I can tell you're like me. Never one to shy away from adventure.
                Wanna take a look around my shop, while you're here?
$choice .action.openShop; Sure!
$choice .action.cancel; Not right now.


#ShopHandler(lookingForFlashlight, world:flashlightQuest, !HasUpgrade("Flashlight"))
{@$MerchantId}  Hey, O! Welcome back. So, about that {nameof Flashlight} I dropped...
                Need any help finding it?
                The sooner I can move on from this embarrassment, the better.
$choice .flashlightRefresher; I could use a reminder.
$choice .action.openShop; No need. Show me the shop!
$choice .action.cancel; Never mind.

:: flashlightRefresher
{@$MerchantId}  Ugh. Okay, I'll make it short.
                Your uncle {nameof @kelpMechanic} handed me a {nameof Flashlight}.
                I dropped it. Yay me.
                Now it's sitting at the bottom of the {nameof FinalStation}, waiting for some brave soul to rescue it.
                Anyhow... wanna take a look around my shop?
$choice .action.openShop; Sure!
$choice .action.cancel; Not right now.

#ShopHandler(gotFlashlight, world:shop.boughtFlashlightFrom != "coral", HasUpgrade("Flashlight"))
@once
{@$MerchantId}  Hey O! Good to see you again.
                Whoa... is that the {nameof Flashlight} I lost in the Lower Depths??
{@player}       Yep. My uncle sent me down to get it.
{@$MerchantId}  Ooh. Thank you, O! 
                Beautiful down there, isn't it? 
{@player}       Yeah. Though all those Anglerfish were pretty terrifying...
{@$MerchantId}  Ha! Tell me about it. 
                Nothing like the thrill of hundreds of deep-sea predators to make you feel alive.
                Anyway. Wanna take a look around my shop?
$choice .action.openShop; Sure!
$choice .action.cancel; Not right now.

:: action.cancel
@cutscene
{@$MerchantId}  Okay! 

// Generic

:: unlockHintHere
{@$MerchantId}   {random Ooh,|Hey,} looks like this would unlock a {h}Job{/h} here!

:: unlockHintSomewhere
{@$MerchantId}   {random Ooh,|Hey,|Just a tip for ya...} looks like this would unlock some jobs over at the {nameof $local:hintStation}!

:: lowExp
{@$MerchantId}   {random Oh... whoops.|Huh... scratch that.} You don't have a high enough {h}Clearance Level{/h} for this one yet.

:: freeItem
{@$MerchantId}   So, want the {nameof $local:itemId}? Won't cost you anything.

:: costItem
{@$MerchantId}   So, want to buy the {nameof $local:itemId}? \
                 {random It'll|That'll} be {cash}{$local:cashCost}{/cash}!

:: cancel
{@$MerchantId}   {random No hay problema.|No worries, O.} Come back soon!  

:: notEnoughCash
{@$MerchantId}   {random Oh... not enough cash. You'll have to come back for this one later.|Huh... looks like you'll need more cash for this one.|I reeeally like you, O, but I still gotta follow the rules. You'll need more cash for this one.}

:: purchased
{@$MerchantId}   {random Awesome!|Good choice.|Sweet!}

// Idle

#OpenHandler(a)
{@$MerchantId}  Sooo... wanna take a look? 

#OpenHandler(b)
{@$MerchantId}  Are you gonna shop, or just hang out here all day? Not that I'm complaining...

#CloseHandler(a)
{@$MerchantId}  Thanks for stopping by, O!

#CloseHandler(purchased, shop:purchaseCount)
@boostScore 10
{@$MerchantId}  Thanks, O! See you around. 

#CloseHandler(notEnoughCash, shop:notEnoughCount)
{@$MerchantId}  Come back when you've got some more {pluralnameof Cash}! 

#CloseHandler(notEnoughExp, shop:needsExpCount)
{@$MerchantId}  Come back when you've got a higher {h}Clearance Level{/h}!

#OpenExplorationHandler(a)
{@$MerchantId}  Wanna check out these sweet exploration tools?

#OpenExplorationHandler(b)
{@$MerchantId}  Need any upgrades for your sub? 

#OpenScienceHandler(a)
{@$MerchantId}  Any science-y things you want?

#OpenScienceHandler(b)
{@$MerchantId}  You're a bigshot scientist, right? I've got all kinds of science-y stuff here. 

// Exploration

#ItemHandler(ROVTagger)
{@$MerchantId}  The {nameof ROVTagger}!| Perfect for science types like you.
                It'll show up at the top of your screen when you're in your sub.
                If you switch it on and move close to a species you've already scanned, the {nameof ROVTagger} will {h}count{/h} all the nearby organisms. 
                Count enough of them, and it'll give you a population estimate.
{@player}     Ooh. That sounds super helpful! 
$set    jobs:common-dive.seen.tagger-intro = true
$EvaluateItemPurchase()

#OverrideItemHandler(FlashlightCoordinates, flashlight.first)
@boostScore 100
@once
{@$MerchantId}  The {nameof Flashlight}!
                Use this one to see in the deep sea, great for dark areas, yadda yadda...
                I mean, you're a brilliant scientist. I'm sure you know what a flashlight is.
$set local:postPurchaseBranch = "interior.shop.coral.PostFlashlight"
$EvaluateItemPurchase()

#ItemHandler(FlashlightCoordinates)
{@$MerchantId}  That's the {nameof Flashlight}!
                 Always a good idea. Especially for adventurous types like you. 
$set local:postPurchaseBranch = "interior.shop.coral.PostFlashlight"
$EvaluateItemPurchase()

:: PostFlashlight
$set    world:flashlightQuest = true
$set    world:shop.boughtFlashlightFrom = "coral"
{@coralMechanic}    ...oh no. {fast}Oh shoot, I forgot.{/fast}
{@player}           Forgot what? 
{@coralMechanic}    Ha.| Funny story.| I borrowed the {nameof Flashlight} from your uncle.
                    And then{wait 0.5} {fast}I accidentally dropped it at {nameof FinalStation}.{/fast}
{@player}           {nameof FinalStation}?
                    I think my friend's mission started out there! 
{@coralMechanic}    Ooh, you know the place? 
{@player}           Well... I've never actually been there.
{@coralMechanic}    Tell ya what, O. Go grab the {nameof Flashlight} for me, and it's yours. Easy peasy. 

$call UnlockSite(RS-0)
$call UnlockStation(FinalStation)
$call ShowPopup(map.unlock.finalStation.header, map.unlock.finalStation.desc)

#ItemHandler(ProbeHacker)
{@$MerchantId}  The {nameof ProbeHacker}! 
                It allows you to read data from any {h}probes{/h} you find out there.
                Essential if you want to take on more complicated jobs.
                Plus, it's pretty fun to use.                 
$EvaluateItemPurchase()

#ItemHandler(Microscope)
{@$MerchantId}  That's the {nameof Microscope}!
                There are tiny creatures out there that you can't be seen with the naked eye.
                The microscope allows you to——
                Oh, who am I kidding. You know what a microscope is.
                For some jobs, you'll need to scan microscopic organisms, so the {nameof Microscope} will definitely come in handy. 
$EvaluateItemPurchase()

// Navigation

#ItemHandler(PropGuard)
{@$MerchantId}  The {nameof PropGuard}!
                Super important. Keeps your propeller from getting tangled up in thick vegetation.
                A must for adventurous types like you. 
$EvaluateItemPurchase()

#ItemHandler(Engine)
{@$MerchantId}  That's the {nameof Engine}!
                It boosts the power of the sub's engine, so it can move against strong currents.
                I usually tell people to be careful with this one...
                But I've got a feeling you can handle it.  
$EvaluateItemPurchase()

#ItemHandler(Hull)
{@$MerchantId}  Ooh, this one would be perfect for you, O!
                The {nameof Hull} allows your sub to withstand more pressure. 
                Essential if you want to go on a deep-sea joyride. 
$EvaluateItemPurchase()

#ItemHandler(Icebreaker)
{@$MerchantId}  That's the {nameof Icebreaker}!
                It shatters ice by emitting a strong, localized electric field. 
                Also useful for breaking the ice at parties... 
                Though you seem like you wouldn't have too much trouble with that. 
$EvaluateItemPurchase()

// Experimentation

#ItemHandler(StressTank)
{@$MerchantId}   Oh, I've heard this one is great!
                 The {nameof StressTank} can be used to measure the stress ranges of different creatures.
                 Could be useful for figuring out how to drive those Lionfish outta town...
                 You know. Just an idea. 
$EvaluateItemPurchase()

#ItemHandler(MeasurementTank)
{@$MerchantId}  Ooh, the {nameof MeasurementTank}!
                If you want to make a name for yourself, you'll need one of these. 
                It'll allow you to get eating, respiration, and reproduction rates for different organisms. 
$EvaluateItemPurchase()

// Modeling

#ItemHandler(VisualModel)
{@$MerchantId}  The {nameof VisualModel}! I love playing with this one.
                Use it to visualize the connections between different species. 
{@player}       Ooh, this could definitely come in handy.
                Maybe I should buy this one now... 
$EvaluateItemPurchase()

#ItemHandler(PredictionModel)
{@$MerchantId}  The {nameof PredictionModel}! 
                A snazzy tool for your {map-name}Modeling Lab{/map-name}.
                Use it to make predictions about creatures in different ecosystems. 
                Super useful for science-nerd types like you. 
$EvaluateItemPurchase()

#ItemHandler(InterveneModel)
{@$MerchantId}  The {nameof InterveneModel} would make a great addition to your {map-name}Modeling Lab{/map-name}!
                Use it to model the outcomes of different possible interventions. 
                Crucial if you ever want to add something to an ecosystem....
                Or, you know. Take something away.
                *cough*LIONFISH*cough*
$EvaluateItemPurchase()